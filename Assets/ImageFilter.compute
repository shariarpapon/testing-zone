#pragma kernel ImageFilter

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
struct DataBuffer 
{
	int x, y;
	float r, g, b, a;
};

RWStructuredBuffer<DataBuffer> dataBuffer;

int size_x;
int size_y;

[numthreads(16,16,1)]
void ImageFilter (uint3 id : SV_DispatchThreadID)
{
	int index = id.y * size_x + id.x;
	DataBuffer color = dataBuffer[index];
	

	if (index + 1 < size_x * size_y)
	{
		DataBuffer color2 = dataBuffer[index + 1];
		color.r = (color.r + color2.r) / 2;
		color.g = (color.g + color2.g) / 2;
		color.b = (color.b + color2.b) / 2;
	}

	dataBuffer[index] = color;
}
